// --------------------------------- //
// Project: Starbase_Alpha_dev
// Start: Tuesday, February 11, 2014
// IDE Version: 12.096


// SETCURRENTDIR("Media") // go to media files

TYPE tmp_csv_raw_type
	line$
ENDTYPE

TYPE io_csv_processed_type
	header$
	term[] 		AS content
	column[] 	AS content
	info[]		AS content
ENDTYPE

TYPE content
	content$
ENDTYPE


GLOBAL io_tmp_raw_csv[] AS tmp_csv_raw_type, io_csv_processed[] AS io_csv_processed_type

FUNCTION io_csv_loader: file$
LOCAL ok, m AS tmp_csv_raw_type, tmp, content

//	IF DOESFILEEXIST(file$) = FALSE THEN

	ok = OPENFILE(0, file$, 1)

//	IF ok = FALSE THEN

		WHILE ENDOFFILE(0) = 0

			content = TRUE

			READLINE 0, m.line$

			IF LEN(m.line$) > 0

				FOR tmp = 0 TO LEN(m.line$) - 1

					IF TRIM$(m.line$) = ""
						content = FALSE
						BREAK
					ENDIF

					IF MID$(m.line$, tmp, 1) = ">"
						content = FALSE
						BREAK
					ENDIF

					IF MID$(m.line$, tmp, 1) = "#" OR MID$(m.line$, tmp, 1) = "&" OR MID$(m.line$, tmp, 1) = "%" OR MID$(m.line$, tmp, 1) = "§"
						m.line$ = TRIM$(m.line$)
						BREAK
					ENDIF

				NEXT

				IF content = TRUE
					DIMPUSH io_tmp_raw_csv[], m
				ENDIF

			ENDIF

		WEND

	CLOSEFILE 0

ENDFUNCTION

FUNCTION io_clean_csv:

	FOREACH m IN io_tmp_raw_csv[]
		DELETE m
	NEXT

ENDFUNCTION

FUNCTION io_csv_processing:
LOCAL header$, header_old$
LOCAL terms$[], columns$[], infos$[], temp$[], term_counter
LOCAL text$, inhalt$[], lang, processed

DIM terms$[1000]
DIM columns$[1000]
DIM infos$[1000]
DIM temp$[1000]

	header$ = 		"NULL"
	header_old$ = 	"NULL"
	term_counter = 0

	FOR tmp = 0 TO 999
		temp$[tmp] = "NULL"
	NEXT



	FOREACH m IN io_tmp_raw_csv[]
		//DEBUG m.line$ + "\n"

		processed = FALSE

		FOR tmp = 0 TO LEN(inhalt$[]) - 1
			DIMDEL inhalt$[], -1
		NEXT

		IF MID$(m.line$, 0, 1) = "#"
			header$ = MID$(m.line$, 1, -1)
			processed = TRUE
		ENDIF
		// ===
		IF header_old$ <> header$
			header_old$ = header$

			term_counter = 0

			FOR tmp = 0 TO 999
				terms$[tmp] = "NULL"
				columns$[tmp] = "NULL"
				infos$[tmp] = "NULL"
			NEXT

		ENDIF
		// ===
		IF MID$(m.line$, 0, 1) = "§"
			text$ = MID$(m.line$, 1, -1)

			terms$[term_counter] = text$
			INC term_counter, 1

			processed = TRUE
		ENDIF
		// ===
		IF MID$(m.line$, 0, 1) = "%"
			text$ = MID$(m.line$, 1, -1)

			lang = SPLITSTR(text$, inhalt$[], ";")

			FOR tmp = 0 TO lang -1
				columns$[tmp] = inhalt$[tmp]
			NEXT

			processed = TRUE
		ENDIF

		IF processed = FALSE
			lang = SPLITSTR(m.line$, inhalt$[], ";")

			FOR tmp = 0 TO lang - 1

				infos$[tmp] = inhalt$[tmp]
				DEBUG io_calc_space_right(inhalt$[tmp]) + " " + inhalt$[tmp] + "\n"
			NEXT


		ENDIF

		DEBUG "\n"

	NEXT



ENDFUNCTION

FUNCTION io_add_space$: count
LOCAL tmp, space$

	FOR tmp = 0 TO count - 1
		INC space$, " "
	NEXT
	
	RETURN space$

ENDFUNCTION

FUNCTION io_calc_space_left: string$
LOCAL size

	size = LEN(string$) - LEN(LTRIM$(string$))

	RETURN size

ENDFUNCTION

FUNCTION io_calc_space_right: string$
LOCAL size

	size = LEN(string$) - LEN(RTRIM$(string$))

	RETURN size

ENDFUNCTION

FUNCTION io_calc_space: string$, position
// position 0 = before
// position 1 = after
LOCAL lang, tmp, count

	lang = LEN(string$)

	SELECT position
	CASE 0

		FOR tmp = 0 TO lang - 1
			IF MID$(string$, tmp, 1) = " "
				INC count, 1
			ELSE
				BREAK
			ENDIF
		NEXT

	CASE 1

		FOR tmp = lang - 1 TO 0 STEP -1
			IF MID$(string$, tmp, 1) = " "
				INC count, 1
			ELSE
				BREAK
			ENDIF
		NEXT

	ENDSELECT

	RETURN count
ENDFUNCTION