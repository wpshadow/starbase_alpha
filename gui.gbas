// --------------------------------- //
// Project: Starbase_Alpha_dev
// Start: Monday, November 11, 2013
// IDE Version: 11.322


// SETCURRENTDIR("Media") // go to media files

TYPE gui_sprite_type
	id
ENDTYPE

TYPE energy_bar_type
	size
	value_current
	value_maximum
	value_critical
ENDTYPE

GLOBAL gui_energy_bar AS energy_bar_type, gui_sprite[] AS gui_sprite_type


FUNCTION gui:

	//gui_draw_energy_bar()

	gui_draw_side_menu()



	sys_debug_console()

	gui_draw_mouse(mouse.x, mouse.y)

ENDFUNCTION


FUNCTION gui_draw_mouse: x, y

	STARTPOLY
		POLYVECTOR x, y, 0, 0, RGB(255, 255, 255)
		POLYVECTOR x + 7, y + 14, 0, 0, RGB(255, 255, 255)
		POLYVECTOR x + 15, y + 15, 0, 0, RGB(0, 0, 255)
		POLYVECTOR x + 14, y + 7, 0, 0, RGB(255, 255, 255)
	ENDPOLY

	DRAWLINE x, y, x + 7, y + 14, RGB(255, 255, 255)
	DRAWLINE x, y, x + 14, y + 7, RGB(255, 255, 255)


ENDFUNCTION

FUNCTION gui_draw_field:



ENDFUNCTION

FUNCTION gui_draw_side_menu:
LOCAL alpha, aktuell, maximum

	IF keyboard.space_press = TRUE
		IF mouse.x >= sys_settings.resolution_x / 2
			IF mouse.x <= sys_settings.resolution_x - 200 AND mouse.x >= sys_settings.resolution_x / 2
				alpha = (((((sys_settings.resolution_x / 2) - mouse.x) * -1) * 98) / ((sys_settings.resolution_x / 2) - 200)) / 100
			ELSE
				alpha = 0.98
			ENDIF

		ENDIF

		ALPHAMODE -0.01 - alpha

		STARTPOLY
			POLYVECTOR sys_settings.resolution_x - 200, 0, 0, 0, RGB(64, 64, 64)
			POLYVECTOR sys_settings.resolution_x - 200, sys_settings.resolution_y, 0, 0, RGB(64, 64, 64)
			POLYVECTOR sys_settings.resolution_x, sys_settings.resolution_y, 0, 0, RGB(0, 0, 0)
			POLYVECTOR sys_settings.resolution_x, 0, 0, 0, RGB(0, 0, 0)

		ENDPOLY

		ALPHAMODE 0
	ENDIF

ENDFUNCTION

FUNCTION gui_draw_energy_bar:
LOCAL size, prozent, bar_size, color_size, crit_size

	SELECT gui_energy_bar.size
	CASE 1
		size = sys_settings.resolution_x * 0.25
	CASE 2
		size = sys_settings.resolution_x * 0.5
	CASE 3
		size = sys_settings.resolution_x * 0.75
	DEFAULT
		size = sys_settings.resolution_x * 0.5
	ENDSELECT

	DRAWRECT (sys_settings.resolution_x / 2) - (size / 2), 0, size, 15, RGB(32, 32, 32)
	gui_draw_border((sys_settings.resolution_x / 2) - (size / 2), 0, size, 15)

	// Ausgabebalken

	prozent = ((gui_energy_bar.value_current * 100) / gui_energy_bar.value_maximum) / 100
	bar_size = (size - 1) * prozent
	color_size = 128 * prozent

	STARTPOLY
		POLYVECTOR (sys_settings.resolution_x / 2) - (size / 2) + 1, 1, 0, 0, RGB(0, 0, 64)
		POLYVECTOR (sys_settings.resolution_x / 2) - (size / 2) + 1, 14, 0, 0, RGB(0, 0, 64)

		POLYVECTOR (sys_settings.resolution_x / 2) - (size / 2) + bar_size, 14, 0, 0, RGB(0, color_size, 127 + color_size)
		POLYVECTOR (sys_settings.resolution_x / 2) - (size / 2) + bar_size, 1, 0, 0, RGB(0, color_size, 127 + color_size)
	ENDPOLY

	DRAWLINE (sys_settings.resolution_x / 2) - (size / 2) + bar_size, 1, (sys_settings.resolution_x / 2) - (size / 2) + bar_size, 14, RGB(0, 128, 255)

	prozent = ((gui_energy_bar.value_critical * 100) / gui_energy_bar.value_maximum) / 100
	crit_size = (size - 1) * prozent

	STARTPOLY
		POLYVECTOR (sys_settings.resolution_x / 2) - (size / 2) + 1, 1, 0, 0, RGB(64, 0, 0)
		POLYVECTOR (sys_settings.resolution_x / 2) - (size / 2) + 1, 14, 0, 0, RGB(64, 0, 0)

		POLYVECTOR (sys_settings.resolution_x / 2) - (size / 2) + crit_size, 14, 0, 0, RGB(255, 0, 0)
		POLYVECTOR (sys_settings.resolution_x / 2) - (size / 2) + crit_size, 1, 0, 0, RGB(255, 0, 0)
	ENDPOLY

ENDFUNCTION

FUNCTION gui_draw_border: x, y, l, b

	DRAWLINE x, y, x + l - 1, y, RGB(255, 255, 255)
	DRAWLINE x, y + b - 1, x + l - 1, y + b - 1, RGB(128, 128, 128)
	DRAWLINE x, y, x, y + b - 1, RGB(255, 255, 255)
	DRAWLINE x + l - 1, y, x + l - 1, y + b - 1, RGB(128, 128, 128)

ENDFUNCTION